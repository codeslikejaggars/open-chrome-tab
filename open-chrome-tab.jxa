#!/usr/bin/env osascript -l JavaScript

function run(argv) {
  var url = argv[0];
  var chrome = Application('Google Chrome');

  var tab;
  // handle no chrome windows
  if(chrome.windows.length === 0) {
    var newWindow = chrome.Window().make();
    tab = newWindow.tabs[0];
    tab.url.set(url);
  } else {
    var lastTab = findTabById(chrome, getLastTabId());

    if(lastTab) {
      lastTab.tab.url.set(url);
      lastTab.window.activeTabIndex.set(lastTab.tabIndex)
      return;
    } else {
      var window = chrome.windows[0];
      tab = chrome.Tab({
        url : url
      });
      window.tabs.push(tab);
      window.activeTabIndex.set(window.tabs.length);
    }
  }

  rememberTab(tab);
}

function findTabById(chrome, tabId) {
  if(!tabId) return;

  for(var windowIndex = 0; windowIndex < chrome.windows.length; windowIndex++) {
    var eachWindow = chrome.windows[windowIndex];

    for(var tabIndex = 0; tabIndex < eachWindow.tabs.length; tabIndex++) {
      var eachTab = eachWindow.tabs[tabIndex];
      if(eachTab.id() === tabId) {
        return {
          window : eachWindow,
          tab : eachTab,
          tabIndex : tabIndex + 1
        };
      }
    }
  }
}

var PLIST_PATH = '/tmp/open-chrome-tab.plist';
function rememberTab(tab) {
  $.NSDictionary.dictionaryWithDictionary({ tabId : tab.id() })
    .writeToFileAtomically(PLIST_PATH, true);
}

function getLastTabId() {
  var plist = $.NSDictionary.dictionaryWithContentsOfFile(PLIST_PATH);
  return ObjC.unwrap(plist.valueForKey( 'tabId' ));
}
